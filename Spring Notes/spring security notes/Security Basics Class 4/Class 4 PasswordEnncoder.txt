what is noOp Password Encoder
->noOp means NO operation password encoder 
->Often reffered to as noop or plain text encoder is a type of password 
encoder used in security configuration for authentication purposes
This is not a secure password encoding algorithm

->NOop does not encrypt or hash the password 
-> In production systems, it is strongly recommended to use more secure 
password encoding methods, such as 
              bcrypt, 
			  Argon2,
			  PBKDF2,
which involve cryptographic hashing and are designed to resist 
various attacks like brute force and rainbow table attacks. 

what is password Encoder
->It is a Interface  
In Spring Security, a password encoder is a component responsible for securely 
encoding (hashing) passwords before they are stored in a database 
or another persistent storage. It also plays a crucial role in 
comparing user-provided passwords during authentication.

Generally we use BCryptPasswordEncoder this is implemented class 
of password encoder interface 


//this class create the filter chain
@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {

    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
        auth.inMemoryAuthentication()
            .withUser("user")
            .password("{bcrypt}$2a$10$R2vfU9lDtI8aX6KiHn.ZV.O7bNghOrHE2KZBMSvhZOIwh4pkIE2Li") // Encoded password
            .roles("USER");
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }
}

Second Class Initalize the spring security 

package com.example.config;

import org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer;

//this class execute the filters chain 
public class SecurityInitailizer extends AbstractSecurityWebApplicationInitializer 
{
	

}

when we are using the spring security spring 

First class create the filter chain and second class execute these  
filter chain 

How can we see the filter chain ?

@EnableWebSecurity(debug=true) 

this will show the all filters in console but in production this 
is not recommended 





 





